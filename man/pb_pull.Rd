% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/push-pull.R
\name{pb_pull}
\alias{pb_pull}
\title{Pull data from GitHub}
\usage{
pb_pull(repo = guess_repo(), tag = "latest", overwrite = TRUE,
  manifest = ".manifest.json", use_timestamps = FALSE)
}
\arguments{
\item{repo}{Name of the repo on GitHub (\code{owner/repo}, i.e.
\code{cboettig/piggyback}). By default will guess the current repository's
GitHub \code{origin}.}

\item{tag}{name of release/tag on GitHub to which data assets will be
attached. Default is to use the latest available release.}

\item{overwrite}{should existing files be overwritten when hashes do
not match? default \code{TRUE}.}

\item{manifest}{name of the local manifest file. Note: A leading dot
(i.e. indicating a hidden file) in the manifest name will be removed
from the name used on the GitHub asset list.}

\item{use_timestamps}{If \code{TRUE}, then files will only be uploaded/downloaded
if timestamp of target is newer than the existing version.  Default is \code{FALSE},
see details.}
}
\description{
Download any tracked datasets piggybacking on GitHub. Files identical on
local and remote versions will not be transferred.  Otherwise, \strong{assumes
GitHub version should overwrite local versions.}
}
\details{
\code{\link[=pb_pull]{pb_pull()}} Will only download tracked files, as identified by the manifest
attached to the requested release on GitHub. Add files to tracking with
\code{\link[=pb_track]{pb_track()}} first and push to GitHub with \code{\link[=pb_push]{pb_push()}}.

By default, use_timestamps is false in \code{\link[=pb_pull]{pb_pull()}} amd \code{\link[=pb_push]{pb_push()}} since
these methods are designed to use the manifest, which relies on hashes
rather than timestamps to decide if a file has changed.  You can use
timestamps and hashes together, but note that timestamps may not be
as reliable, particularly if your files are being moved or copied
some other way without actually being updated.

Hash comparisons can be more reliable, but unlike timestamps, have no
directionality -- we cannot tell which file is most recent.  Checking
hashes therefore only ensures we not bother uploading or downloading
a file identical to one we already have.
}
\examples{
\dontrun{
pb_pull()
}
}
